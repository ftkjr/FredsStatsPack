// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// EffectSize_t
double EffectSize_t(double mu1, double mu2, double sigma);
RcppExport SEXP _FredsStatsPack_EffectSize_t(SEXP mu1SEXP, SEXP mu2SEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(EffectSize_t(mu1, mu2, sigma));
    return rcpp_result_gen;
END_RCPP
}
// Effect_Size
double Effect_Size(double pi, double mu1, double mu, double sigma);
RcppExport SEXP _FredsStatsPack_Effect_Size(SEXP piSEXP, SEXP mu1SEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(Effect_Size(pi, mu1, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// Freds_2SampleTtest
double Freds_2SampleTtest(const arma::colvec& x1, const arma::colvec& x2);
RcppExport SEXP _FredsStatsPack_Freds_2SampleTtest(SEXP x1SEXP, SEXP x2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type x2(x2SEXP);
    rcpp_result_gen = Rcpp::wrap(Freds_2SampleTtest(x1, x2));
    return rcpp_result_gen;
END_RCPP
}
// PhiSquared_D
double PhiSquared_D(int a, int n, double D, double sigma);
RcppExport SEXP _FredsStatsPack_PhiSquared_D(SEXP aSEXP, SEXP nSEXP, SEXP DSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(PhiSquared_D(a, n, D, sigma));
    return rcpp_result_gen;
END_RCPP
}
// Rsquared
double Rsquared(double SSx, double SSy, double SSxy);
RcppExport SEXP _FredsStatsPack_Rsquared(SEXP SSxSEXP, SEXP SSySEXP, SEXP SSxySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type SSx(SSxSEXP);
    Rcpp::traits::input_parameter< double >::type SSy(SSySEXP);
    Rcpp::traits::input_parameter< double >::type SSxy(SSxySEXP);
    rcpp_result_gen = Rcpp::wrap(Rsquared(SSx, SSy, SSxy));
    return rcpp_result_gen;
END_RCPP
}
// SigmaTau_fromMeans
double SigmaTau_fromMeans(const arma::colvec& mu);
RcppExport SEXP _FredsStatsPack_SigmaTau_fromMeans(SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(SigmaTau_fromMeans(mu));
    return rcpp_result_gen;
END_RCPP
}
// Sum_Squares
double Sum_Squares(const arma::colvec& x);
RcppExport SEXP _FredsStatsPack_Sum_Squares(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Sum_Squares(x));
    return rcpp_result_gen;
END_RCPP
}
// TukeysQ
double TukeysQ(double xi, double xj, double msw, double n);
RcppExport SEXP _FredsStatsPack_TukeysQ(SEXP xiSEXP, SEXP xjSEXP, SEXP mswSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type xj(xjSEXP);
    Rcpp::traits::input_parameter< double >::type msw(mswSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(TukeysQ(xi, xj, msw, n));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _FredsStatsPack_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _FredsStatsPack_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _FredsStatsPack_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _FredsStatsPack_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// ttest_means
double ttest_means(double y1, double y2, double n1, double n2, double mse);
RcppExport SEXP _FredsStatsPack_ttest_means(SEXP y1SEXP, SEXP y2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP mseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< double >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< double >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type mse(mseSEXP);
    rcpp_result_gen = Rcpp::wrap(ttest_means(y1, y2, n1, n2, mse));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FredsStatsPack_EffectSize_t", (DL_FUNC) &_FredsStatsPack_EffectSize_t, 3},
    {"_FredsStatsPack_Effect_Size", (DL_FUNC) &_FredsStatsPack_Effect_Size, 4},
    {"_FredsStatsPack_Freds_2SampleTtest", (DL_FUNC) &_FredsStatsPack_Freds_2SampleTtest, 2},
    {"_FredsStatsPack_PhiSquared_D", (DL_FUNC) &_FredsStatsPack_PhiSquared_D, 4},
    {"_FredsStatsPack_Rsquared", (DL_FUNC) &_FredsStatsPack_Rsquared, 3},
    {"_FredsStatsPack_SigmaTau_fromMeans", (DL_FUNC) &_FredsStatsPack_SigmaTau_fromMeans, 1},
    {"_FredsStatsPack_Sum_Squares", (DL_FUNC) &_FredsStatsPack_Sum_Squares, 1},
    {"_FredsStatsPack_TukeysQ", (DL_FUNC) &_FredsStatsPack_TukeysQ, 4},
    {"_FredsStatsPack_rcpparma_hello_world", (DL_FUNC) &_FredsStatsPack_rcpparma_hello_world, 0},
    {"_FredsStatsPack_rcpparma_outerproduct", (DL_FUNC) &_FredsStatsPack_rcpparma_outerproduct, 1},
    {"_FredsStatsPack_rcpparma_innerproduct", (DL_FUNC) &_FredsStatsPack_rcpparma_innerproduct, 1},
    {"_FredsStatsPack_rcpparma_bothproducts", (DL_FUNC) &_FredsStatsPack_rcpparma_bothproducts, 1},
    {"_FredsStatsPack_ttest_means", (DL_FUNC) &_FredsStatsPack_ttest_means, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_FredsStatsPack(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
